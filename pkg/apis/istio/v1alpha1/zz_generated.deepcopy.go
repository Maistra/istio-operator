// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogSpec) DeepCopyInto(out *CatalogSpec) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogSpec.
func (in *CatalogSpec) DeepCopy() *CatalogSpec {
	if in == nil {
		return nil
	}
	out := new(CatalogSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitHubSpec) DeepCopyInto(out *GitHubSpec) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitHubSpec.
func (in *GitHubSpec) DeepCopy() *GitHubSpec {
	if in == nil {
		return nil
	}
	out := new(GitHubSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Installation) DeepCopyInto(out *Installation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		if *in == nil {
			*out = nil
		} else {
			*out = new(InstallationSpec)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		if *in == nil {
			*out = nil
		} else {
			*out = new(InstallationStatus)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Installation.
func (in *Installation) DeepCopy() *Installation {
	if in == nil {
		return nil
	}
	out := new(Installation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Installation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstallationList) DeepCopyInto(out *InstallationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Installation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstallationList.
func (in *InstallationList) DeepCopy() *InstallationList {
	if in == nil {
		return nil
	}
	out := new(InstallationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstallationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstallationSpec) DeepCopyInto(out *InstallationSpec) {
	*out = *in
	if in.DeploymentType != nil {
		in, out := &in.DeploymentType, &out.DeploymentType
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Istio != nil {
		in, out := &in.Istio, &out.Istio
		if *in == nil {
			*out = nil
		} else {
			*out = new(IstioSpec)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Jaeger != nil {
		in, out := &in.Jaeger, &out.Jaeger
		if *in == nil {
			*out = nil
		} else {
			*out = new(JaegerSpec)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Kiali != nil {
		in, out := &in.Kiali, &out.Kiali
		if *in == nil {
			*out = nil
		} else {
			*out = new(KialiSpec)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Launcher != nil {
		in, out := &in.Launcher, &out.Launcher
		if *in == nil {
			*out = nil
		} else {
			*out = new(LauncherSpec)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.ThreeScale != nil {
		in, out := &in.ThreeScale, &out.ThreeScale
		if *in == nil {
			*out = nil
		} else {
			*out = new(ThreeScaleSpec)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstallationSpec.
func (in *InstallationSpec) DeepCopy() *InstallationSpec {
	if in == nil {
		return nil
	}
	out := new(InstallationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstallationStatus) DeepCopyInto(out *InstallationStatus) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		if *in == nil {
			*out = nil
		} else {
			*out = new(InstallationSpec)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstallationStatus.
func (in *InstallationStatus) DeepCopy() *InstallationStatus {
	if in == nil {
		return nil
	}
	out := new(InstallationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioSpec) DeepCopyInto(out *IstioSpec) {
	*out = *in
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.Community != nil {
		in, out := &in.Community, &out.Community
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioSpec.
func (in *IstioSpec) DeepCopy() *IstioSpec {
	if in == nil {
		return nil
	}
	out := new(IstioSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JaegerSpec) DeepCopyInto(out *JaegerSpec) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.ElasticsearchMemory != nil {
		in, out := &in.ElasticsearchMemory, &out.ElasticsearchMemory
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JaegerSpec.
func (in *JaegerSpec) DeepCopy() *JaegerSpec {
	if in == nil {
		return nil
	}
	out := new(JaegerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KialiSpec) DeepCopyInto(out *KialiSpec) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KialiSpec.
func (in *KialiSpec) DeepCopy() *KialiSpec {
	if in == nil {
		return nil
	}
	out := new(KialiSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LauncherSpec) DeepCopyInto(out *LauncherSpec) {
	*out = *in
	if in.OpenShift != nil {
		in, out := &in.OpenShift, &out.OpenShift
		if *in == nil {
			*out = nil
		} else {
			*out = new(OpenShiftSpec)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.GitHub != nil {
		in, out := &in.GitHub, &out.GitHub
		if *in == nil {
			*out = nil
		} else {
			*out = new(GitHubSpec)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		if *in == nil {
			*out = nil
		} else {
			*out = new(CatalogSpec)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LauncherSpec.
func (in *LauncherSpec) DeepCopy() *LauncherSpec {
	if in == nil {
		return nil
	}
	out := new(LauncherSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenShiftSpec) DeepCopyInto(out *OpenShiftSpec) {
	*out = *in
	if in.User != nil {
		in, out := &in.User, &out.User
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenShiftSpec.
func (in *OpenShiftSpec) DeepCopy() *OpenShiftSpec {
	if in == nil {
		return nil
	}
	out := new(OpenShiftSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeScaleAdapterSpec) DeepCopyInto(out *ThreeScaleAdapterSpec) {
	*out = *in
	if in.ListenAddr != nil {
		in, out := &in.ListenAddr, &out.ListenAddr
		if *in == nil {
			*out = nil
		} else {
			*out = new(int32)
			**out = **in
		}
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.LogJSON != nil {
		in, out := &in.LogJSON, &out.LogJSON
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.ReportMetrics != nil {
		in, out := &in.ReportMetrics, &out.ReportMetrics
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.MetricsPort != nil {
		in, out := &in.MetricsPort, &out.MetricsPort
		if *in == nil {
			*out = nil
		} else {
			*out = new(int32)
			**out = **in
		}
	}
	if in.CacheTTLSeconds != nil {
		in, out := &in.CacheTTLSeconds, &out.CacheTTLSeconds
		if *in == nil {
			*out = nil
		} else {
			*out = new(int)
			**out = **in
		}
	}
	if in.CacheRefreshSeconds != nil {
		in, out := &in.CacheRefreshSeconds, &out.CacheRefreshSeconds
		if *in == nil {
			*out = nil
		} else {
			*out = new(int)
			**out = **in
		}
	}
	if in.CacheEntriesMax != nil {
		in, out := &in.CacheEntriesMax, &out.CacheEntriesMax
		if *in == nil {
			*out = nil
		} else {
			*out = new(int)
			**out = **in
		}
	}
	if in.CacheRefreshRetries != nil {
		in, out := &in.CacheRefreshRetries, &out.CacheRefreshRetries
		if *in == nil {
			*out = nil
		} else {
			*out = new(int)
			**out = **in
		}
	}
	if in.AllowInsecureConn != nil {
		in, out := &in.AllowInsecureConn, &out.AllowInsecureConn
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.ClientTimeoutSeconds != nil {
		in, out := &in.ClientTimeoutSeconds, &out.ClientTimeoutSeconds
		if *in == nil {
			*out = nil
		} else {
			*out = new(int)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeScaleAdapterSpec.
func (in *ThreeScaleAdapterSpec) DeepCopy() *ThreeScaleAdapterSpec {
	if in == nil {
		return nil
	}
	out := new(ThreeScaleAdapterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeScaleSpec) DeepCopyInto(out *ThreeScaleSpec) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.Adapter != nil {
		in, out := &in.Adapter, &out.Adapter
		if *in == nil {
			*out = nil
		} else {
			*out = new(ThreeScaleAdapterSpec)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeScaleSpec.
func (in *ThreeScaleSpec) DeepCopy() *ThreeScaleSpec {
	if in == nil {
		return nil
	}
	out := new(ThreeScaleSpec)
	in.DeepCopyInto(out)
	return out
}
