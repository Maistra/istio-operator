apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: istio-sidecar-injector
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "sidecar-injector.name" . }}
    chart: {{ template "sidecar-injector.chart" . }}
    heritage: {{ .Release.Service }}
    maistra-version: 1.0.5
    release: {{ .Release.Name }}
    istio: sidecar-injector
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  selector:
    matchLabels:
        app: {{ template "sidecar-injector.name" . }}
        release: {{ .Release.Name }}
        istio: sidecar-injector
  template:
    metadata:
      labels:
        app: {{ template "sidecar-injector.name" . }}
        chart: {{ template "sidecar-injector.chart" . }}
        heritage: {{ .Release.Service }}
        maistra-control-plane: {{ .Release.Namespace }}
        release: {{ .Release.Name }}
        istio: sidecar-injector
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: istio-sidecar-injector-service-account
 {{- if .Values.global.priorityClassName }}
      priorityClassName: "{{ .Values.global.priorityClassName }}"
{{- end }}
      containers:
        - name: sidecar-injector-webhook
          image: "{{ .Values.global.hub }}/{{ .Values.image }}:{{ .Values.global.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          args:
            - --webhookConfigName=istio-sidecar-injector-{{ .Release.Namespace }}
            - --caCertFile=/etc/istio/certs/root-cert.pem
            - --tlsCertFile=/etc/istio/certs/cert-chain.pem
            - --tlsKeyFile=/etc/istio/certs/key.pem
            - --injectConfig=/etc/istio/inject/config
            - --meshConfig=/etc/istio/config/mesh
            - --healthCheckInterval=2s
            - --mutating-webhook-config-file
            - /etc/istio/webhook/mutatingwebhookconfiguration.yaml
            - --namespace={{ .Release.Namespace }}
            - --healthCheckFile=/tmp/health
            - --port=8443
            - --manageWebhookConfig=false
          ports:
          - name: webhook
            containerPort: 8443
          volumeMounts:
          - name: config-volume
            mountPath: /etc/istio/config
            readOnly: true
          - name: webhook
            mountPath: /etc/istio/webhook
            readOnly: true
          - name: certs
            mountPath: /etc/istio/certs
            readOnly: true
          - name: inject-config
            mountPath: /etc/istio/inject
            readOnly: true
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/sidecar-injector
                - probe
                - --probe-path=/tmp/health
                - --interval=4s
            initialDelaySeconds: 4
            periodSeconds: 4
          readinessProbe:
            exec:
              command:
                - /usr/local/bin/sidecar-injector
                - probe
                - --probe-path=/tmp/health
                - --interval=4s
            initialDelaySeconds: 4
            periodSeconds: 4
          resources:
{{- if .Values.resources }}
{{ toYaml .Values.resources | indent 12 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 12 }}
{{- end }}
      volumes:
      - name: config-volume
        configMap:
          name: istio
      - name: webhook
        configMap:
          name: istio-sidecar-webhook-configuration
      - name: certs
        secret:
          secretName: istio.istio-sidecar-injector-service-account
      - name: inject-config
        configMap:
          name: istio-sidecar-injector
          items:
          - key: config
            path: config
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      {{- include "podAntiAffinity" . | indent 6 }}
